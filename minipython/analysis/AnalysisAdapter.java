/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.analysis;

import java.util.*;
import minipython.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProgramme(AProgramme node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStatCommands(AStatCommands node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExprCommands(AExprCommands node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfStatement(AIfStatement node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAssignStatement(AAssignStatement node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrintStatement(APrintStatement node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATrueComparison(ATrueComparison node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFalseComparison(AFalseComparison node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALesscComparison(ALesscComparison node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAGreatcComparison(AGreatcComparison node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiplicationExpression(AMultiplicationExpression node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAdditionExpression(AAdditionExpression node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubtractionExpression(ASubtractionExpression node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPowMultiplication(APowMultiplication node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiplicationMultiplication(AMultiplicationMultiplication node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASomethingPower(ASomethingPower node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPowerPower(APowerPower node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdentifierSomething(AIdentifierSomething node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumbSomething(ANumbSomething node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParSomething(AParSomething node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTab(TTab node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlusplus(TPlusplus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEqualequal(TEqualequal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMinusminus(TMinusminus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMineq(TMineq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPluseq(TPluseq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiveq(TDiveq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMulteq(TMulteq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPow(TPow node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEq(TEq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDef(TDef node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNot(TNot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLogicAnd(TLogicAnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLogicOr(TLogicOr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLBr(TLBr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRBr(TRBr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIn(TIn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFor(TFor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLen(TLen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMin(TMin node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMax(TMax node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPrint(TPrint node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReturn(TReturn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAssert(TAssert node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNoteq(TNoteq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLesseq(TLesseq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGreateq(TGreateq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLess(TLess node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGreat(TGreat node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTrue(TTrue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSemi(TSemi node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFalse(TFalse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNone(TNone node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTQuote(TQuote node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWhiteSpace(TWhiteSpace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLineComment(TLineComment node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumber(TNumber node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStringDoubleQuotes(TStringDoubleQuotes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStringSingleQuotes(TStringSingleQuotes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEverythingElse(TEverythingElse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
