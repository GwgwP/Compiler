/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class AAftOrAfteror extends PAfteror
{
    private PAfterand _afterand_;

    public AAftOrAfteror()
    {
    }

    public AAftOrAfteror(
        PAfterand _afterand_)
    {
        setAfterand(_afterand_);

    }
    public Object clone()
    {
        return new AAftOrAfteror(
            (PAfterand) cloneNode(_afterand_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAftOrAfteror(this);
    }

    public PAfterand getAfterand()
    {
        return _afterand_;
    }

    public void setAfterand(PAfterand node)
    {
        if(_afterand_ != null)
        {
            _afterand_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _afterand_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_afterand_);
    }

    void removeChild(Node child)
    {
        if(_afterand_ == child)
        {
            _afterand_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_afterand_ == oldChild)
        {
            setAfterand((PAfterand) newChild);
            return;
        }

    }
}
