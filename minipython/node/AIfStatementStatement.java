/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class AIfStatementStatement extends PStatement
{
    private PIfCompount _ifCompount_;

    public AIfStatementStatement()
    {
    }

    public AIfStatementStatement(
        PIfCompount _ifCompount_)
    {
        setIfCompount(_ifCompount_);

    }
    public Object clone()
    {
        return new AIfStatementStatement(
            (PIfCompount) cloneNode(_ifCompount_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIfStatementStatement(this);
    }

    public PIfCompount getIfCompount()
    {
        return _ifCompount_;
    }

    public void setIfCompount(PIfCompount node)
    {
        if(_ifCompount_ != null)
        {
            _ifCompount_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _ifCompount_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_ifCompount_);
    }

    void removeChild(Node child)
    {
        if(_ifCompount_ == child)
        {
            _ifCompount_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_ifCompount_ == oldChild)
        {
            setIfCompount((PIfCompount) newChild);
            return;
        }

    }
}
