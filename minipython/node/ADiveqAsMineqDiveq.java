/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class ADiveqAsMineqDiveq extends PAsMineqDiveq
{
    private TDiveq _diveq_;

    public ADiveqAsMineqDiveq()
    {
    }

    public ADiveqAsMineqDiveq(
        TDiveq _diveq_)
    {
        setDiveq(_diveq_);

    }
    public Object clone()
    {
        return new ADiveqAsMineqDiveq(
            (TDiveq) cloneNode(_diveq_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADiveqAsMineqDiveq(this);
    }

    public TDiveq getDiveq()
    {
        return _diveq_;
    }

    public void setDiveq(TDiveq node)
    {
        if(_diveq_ != null)
        {
            _diveq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _diveq_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_diveq_);
    }

    void removeChild(Node child)
    {
        if(_diveq_ == child)
        {
            _diveq_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_diveq_ == oldChild)
        {
            setDiveq((TDiveq) newChild);
            return;
        }

    }
}
