/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class AAsExpression extends PExpression
{
    private PExpressiono _expressiono_;

    public AAsExpression()
    {
    }

    public AAsExpression(
        PExpressiono _expressiono_)
    {
        setExpressiono(_expressiono_);

    }
    public Object clone()
    {
        return new AAsExpression(
            (PExpressiono) cloneNode(_expressiono_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAsExpression(this);
    }

    public PExpressiono getExpressiono()
    {
        return _expressiono_;
    }

    public void setExpressiono(PExpressiono node)
    {
        if(_expressiono_ != null)
        {
            _expressiono_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _expressiono_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_expressiono_);
    }

    void removeChild(Node child)
    {
        if(_expressiono_ == child)
        {
            _expressiono_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_expressiono_ == oldChild)
        {
            setExpressiono((PExpressiono) newChild);
            return;
        }

    }
}
